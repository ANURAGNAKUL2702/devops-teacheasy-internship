#!/bin/bash

set -e

# -------------------------------
# üöÄ Deployment Script
# -------------------------------
# Usage: ./deploy.sh <Dev|Prod>
# Loads config, installs deps, clones repo, runs app, sets auto-shutdown
# -------------------------------

# Step 0: Parse and validate stage
STAGE=$1

if [[ -z "$STAGE" ]]; then
  echo "‚ùå Please provide a stage (Dev or Prod)."
  echo "Usage: ./deploy.sh <Dev|Prod>"
  exit 1
fi

CONFIG_FILE="$(echo "$STAGE" | tr '[:upper:]' '[:lower:]')_config"

if [[ ! -f "$CONFIG_FILE" ]]; then
  echo "‚ùå Config file '$CONFIG_FILE' not found."
  exit 1
fi

# Step 1: Load configuration
echo "üìÑ Loading config from '$CONFIG_FILE'..."
source "$CONFIG_FILE"

# Step 2: Set default values (if missing in config)
INSTANCE_TYPE="${INSTANCE_TYPE:-t2.micro}"
REPO_URL="${REPO_URL:-https://github.com/example/repo.git}"
DEPENDENCIES="${DEPENDENCIES:-git curl}"
SHUTDOWN_AFTER_MINUTES="${SHUTDOWN_AFTER_MINUTES:-60}"

echo "üõ†Ô∏è Configuration:"
echo "   ‚îî‚îÄ Instance Type        : $INSTANCE_TYPE"
echo "   ‚îî‚îÄ Repo URL             : $REPO_URL"
echo "   ‚îî‚îÄ Dependencies         : $DEPENDENCIES"
echo "   ‚îî‚îÄ Auto-Shutdown (mins) : $SHUTDOWN_AFTER_MINUTES"

# Step 3: System prep
echo "üîÑ Updating system packages..."
sudo apt-get update -y

echo "üì¶ Installing required dependencies..."
for pkg in $DEPENDENCIES; do
  echo "   ‚ûï $pkg"
  sudo apt-get install -y "$pkg" || echo "   ‚ö†Ô∏è Failed to install $pkg"
done

# Step 4: Clone repository
echo "üìÅ Cloning project repo..."
git clone "$REPO_URL" app || { echo "‚ùå Clone failed"; exit 1; }

cd app || { echo "‚ùå Cannot access 'app' directory"; exit 1; }

# Step 5: Start the application
echo "üöÄ Running the application..."

if [[ -f package.json ]]; then
  echo "üîç Node.js project detected"
  npm install
  npm start &
elif [[ -f requirements.txt ]]; then
  echo "üêç Python project detected"
  pip install -r requirements.txt
  python app.py &
else
  echo "‚ö†Ô∏è Unknown project type. Skipping run."
fi

# Step 6: Schedule auto-shutdown
echo "‚è≤Ô∏è Setting auto-shutdown in $SHUTDOWN_AFTER_MINUTES minutes..."
sudo shutdown -h +$SHUTDOWN_AFTER_MINUTES "Shutting down to save costs"

echo "‚úÖ Deployment successful for '$STAGE' stage."

